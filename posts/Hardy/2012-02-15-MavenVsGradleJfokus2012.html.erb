---
title: "Maven vs Gradle @ Jfokus 2012"
author: "Hardy Ferentschik"
creation_date: "15-02-2012"
blogger_name: "Hardy"
layout: blog-post
tags: []
slug: MavenVsGradleJfokus2012
lace: http://in.relation.to/22918.lace
---
<div id="documentDisplay" class="documentDisplay">


<p class="wikiPara">
After gradually collecting more and more experience with <a href="http://gradle.org/" target="" class="regularLink">Gradle</a> via the Hibernate Core build, I decided prepare a final showdown. As a reminder, Hibernate ORM switched as of version 4 from <a href="http://maven.apache.org/" target="" class="regularLink">Maven</a> to Gradle for a variety of <a href="https://community.jboss.org/wiki/GradleWhy" target="" class="regularLink">reasons</a>. Taking these reasons on board, I tried to compare Maven vs Gradle incorporating some of the lessons learned. I presented the results at <a href="http://www.jfokus.se" target="" class="regularLink">Jfokus 2012</a>. If you are interested here are the <a href="/Bloggers/MavenVsGradleJfokus2012#attachment1" target="" class="regularLink">slides[1]</a>.
</p>

<p class="wikiPara">
Bottom line, if you are already using maven and have no issues or if you are building simple artifacts stick to Maven. If you have problems with things like:
</p>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> Scripting</li>
<li class="wikiUnorderedListItem"> Rector builds</li>
<li class="wikiUnorderedListItem"> Assembly creation (release bundle creation)</li>
<li class="wikiUnorderedListItem"> (Javadocs) Aggregation</li>
<li class="wikiUnorderedListItem"> Grouping of dependencies</li>
</ul>

<p class="wikiPara">
you might want to consider Gradle.
</p>

<p class="wikiPara">
--Hardy</p>
</div>
